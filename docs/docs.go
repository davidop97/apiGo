// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/buyers": {
            "get": {
                "description": "get all buyers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Buyer",
                    "buyers"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "create a buyer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Buyer",
                    "buyers"
                ],
                "parameters": [
                    {
                        "description": "Buyer body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Buyer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/buyers/reportPurchaseOrders/": {
            "get": {
                "description": "get a buyer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "purchase_orders"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Purchase Orders By Buyer id",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/buyers/{id}": {
            "get": {
                "description": "get a buyer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Buyer",
                    "buyers"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Buyer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a buyer",
                "tags": [
                    "domain.Buyer",
                    "buyers"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delete buyer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a buyer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Buyer",
                    "buyers"
                ],
                "summary": "Update a buyer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Update buyer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Buyer update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/carries": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carries"
                ],
                "summary": "Get all carries, returns empty list if there are no carries.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carries"
                ],
                "summary": "Save a carry, returns error if the carry already exists or if the data is incorrect.",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/carries/locality": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carries"
                ],
                "summary": "Get all carries by locality, returns empty list if there are no carries.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Employee"
                ],
                "summary": "Get all the employees available or an error if the list is empty.",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Employee"
                ],
                "summary": "Create a new ∂ employee or return an error if the new employee has invalid",
                "parameters": [
                    {
                        "description": "Struct of Employee domain",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.Employee"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/employees/reportInboundOrder": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inboundOrders"
                ],
                "summary": "Get all reports with inboudOrders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/employees/reportInboundOrders": {
            "get": {
                "description": "get inbound orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inboundOrders"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Inbound Orders By Employee id",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Employee"
                ],
                "summary": "Get a employee by id or an error if that id not exists.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id from the employee",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "domain.Employee"
                ],
                "summary": "Delete a employee using its id or return an error if that employee not exist.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id from the employee",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Employee"
                ],
                "summary": "Update employee or return an error if that employee not exist, or has invalid format.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id from the employee",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/inboundOrders": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inboundOrders"
                ],
                "summary": "Create new inboundOrder",
                "parameters": [
                    {
                        "description": "Inbound orders body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.InboudOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/localities": {
            "get": {
                "description": "Get all the localities available or an error if the list is empty or an internal error occurs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Locality"
                ],
                "summary": "Get all the localities available.",
                "responses": {
                    "200": {
                        "description": "List of all localities",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Locality"
                            }
                        }
                    },
                    "404": {
                        "description": "Localities not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new locality or an error if that locality cannot be created or an internal error occurs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Locality"
                ],
                "summary": "Create a new locality or an error if that locality cannot be created.",
                "parameters": [
                    {
                        "description": "Struct of Locality domain",
                        "name": "Locality",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Locality"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "New Locality created",
                        "schema": {
                            "$ref": "#/definitions/domain.Locality"
                        }
                    },
                    "409": {
                        "description": "locality already exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "invalid or missing field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/localities/reportSellers": {
            "get": {
                "description": "Get a report of sellers by locality using its id. Or show all the sellers of all the localities if the id is not provided.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Locality"
                ],
                "summary": "Get a report of sellers by locality.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "locality id",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report of sellers by locality",
                        "schema": {
                            "$ref": "#/definitions/domain.ReportSellers"
                        }
                    },
                    "400": {
                        "description": "error getting the report for the requested ID. Id must be greater than 0",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "sellers not found for the requested ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "server internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/locality/{id}": {
            "get": {
                "description": "Get a locality by id or an error if that id not exists or an internal error occurs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Locality"
                ],
                "summary": "Get a locality by id or an error if that id not exists.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id from the locality",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locality requested",
                        "schema": {
                            "$ref": "#/definitions/domain.Locality"
                        }
                    },
                    "400": {
                        "description": "invalid id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Locality not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Product",
                    "ping",
                    "domain.Product"
                ],
                "summary": "Responds with a pong message.",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/productBatches": {
            "get": {
                "description": "Gets a list of all product batches.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "productBatches"
                ],
                "summary": "Retrieves all product batches.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new product batch based on the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "productBatches"
                ],
                "summary": "Creates a new product batch.",
                "parameters": [
                    {
                        "format": "json",
                        "description": "Product batch data to create",
                        "name": "sectionData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/productrecord": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "productrecords"
                ],
                "summary": "Retrieves product records by product ID or all product records if idProduct is 0.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.ProductRecordGet"
                            }
                        }
                    },
                    "404": {
                        "description": "Product Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "productrecords"
                ],
                "summary": "Creates a new product record.",
                "parameters": [
                    {
                        "description": "Product Record to be created",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ProductRecordCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.ProductRecord"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Retrieves a list of all products.",
                "responses": {
                    "200": {
                        "description": "List of all products",
                        "schema": {
                            "$ref": "#/definitions/domain.Product"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Creates a new product.",
                "parameters": [
                    {
                        "description": "Product to be created",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created product data",
                        "schema": {
                            "$ref": "#/definitions/domain.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products",
                    "domain.Product"
                ],
                "summary": "Retrieves a product by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product data",
                        "schema": {
                            "$ref": "#/definitions/domain.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Product Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Updates an existing product by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated product object",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated product data",
                        "schema": {
                            "$ref": "#/definitions/domain.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Product Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Deletes a product by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Product Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/purchaseOrders": {
            "post": {
                "description": "create a new purchase order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "purchase_orders"
                ],
                "parameters": [
                    {
                        "description": "Purchase orders body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RequestBodyPurchaseCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sections": {
            "get": {
                "description": "Gets a list of all the sections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sections"
                ],
                "summary": "Retrieves all sections.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new section based on the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sections"
                ],
                "summary": "Creates a new section.",
                "parameters": [
                    {
                        "format": "json",
                        "description": "Section data to create",
                        "name": "sectionData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sections/reportProducts": {
            "get": {
                "description": "Gets the total ammount of products stored in a given section. If section is not specified, gets ammount of products for each section.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sections"
                ],
                "summary": "Gets number of products stored in a section.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the specific section",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sections/{id}": {
            "get": {
                "description": "Gets details of a specific section using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sections"
                ],
                "summary": "Retrieves a specific section.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the section item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the section corresponding to the provided ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sections"
                ],
                "summary": "Deletes a section.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the section to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an existing section based on the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sections"
                ],
                "summary": "Updates an existing section.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the section to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "format": "json",
                        "description": "Updated section data",
                        "name": "sectionData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/seller": {
            "get": {
                "description": "Get all the sellers available or an error if the list is empty or an internal error occurs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Seller"
                ],
                "summary": "Get all the sellers available.",
                "responses": {
                    "200": {
                        "description": "List of all sellers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Seller"
                            }
                        }
                    },
                    "404": {
                        "description": "Sellers not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new seller or return an error if the new seller has invalid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Seller"
                ],
                "summary": "Create a new seller or return an error if the new seller cannot be created.",
                "parameters": [
                    {
                        "description": "Struct of Seller domain",
                        "name": "Seller",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Seller"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "New created seller",
                        "schema": {
                            "$ref": "#/definitions/domain.Seller"
                        }
                    },
                    "409": {
                        "description": "seller already exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "invalid or missing locality. Locality_id must be 1 or greater",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/seller/{id}": {
            "get": {
                "description": "Get a seller by id or an error if that id not exists or an internal error occurs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Seller"
                ],
                "summary": "Get a seller by id or an error if that id not exists.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id from the seller",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seller requested",
                        "schema": {
                            "$ref": "#/definitions/domain.Seller"
                        }
                    },
                    "400": {
                        "description": "invalid id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Seller not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a seller using its id or return an error if that",
                "tags": [
                    "domain.Seller"
                ],
                "summary": "Delete seller or return an error otherwise.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id from the seller",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Seller deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "id must be 1 or greater",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Seller not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a seller or return an error if that seller not exist,",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain.Seller"
                ],
                "summary": "Update seller or return an error otherwise.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id from the seller",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Struct of Seller domain",
                        "name": "Seller",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Seller"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seller updated",
                        "schema": {
                            "$ref": "#/definitions/domain.Seller"
                        }
                    },
                    "400": {
                        "description": "invalid id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Seller not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/warehouses": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouses"
                ],
                "summary": "Get all the warehouses available.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouses"
                ],
                "summary": "Creates a warehouse, returns error if the warehouse doesn't match the standard input.",
                "parameters": [
                    {
                        "description": "Warehouse struct",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.Warehouse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/warehouses/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouses"
                ],
                "summary": "Get the warehouses by ID, returns error if the warehouse doesn't exists.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "warehouses"
                ],
                "summary": "Delete the warehouses by ID, returns error if the warehouse doesn't exists.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouses"
                ],
                "summary": "Update the warehouses by ID, returns error if the warehouse doesn't exists.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Buyer": {
            "type": "object",
            "properties": {
                "card_number_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "domain.Locality": {
            "type": "object",
            "properties": {
                "country_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "locality_name": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "integer"
                },
                "province_name": {
                    "type": "string"
                }
            }
        },
        "domain.Product": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expiration_rate": {
                    "type": "number"
                },
                "freezing_rate": {
                    "type": "number"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "netweight": {
                    "type": "number"
                },
                "product_code": {
                    "type": "string"
                },
                "product_type_id": {
                    "type": "integer"
                },
                "recommended_freezing_temperature": {
                    "type": "number"
                },
                "seller_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "domain.ProductRecord": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "last_update_date": {
                    "type": "string"
                },
                "product_id": {
                    "description": "Product_code of the product (fk)",
                    "type": "integer"
                },
                "purchase_price": {
                    "type": "number"
                },
                "sale_price": {
                    "type": "number"
                }
            }
        },
        "domain.ProductRecordCreate": {
            "type": "object",
            "properties": {
                "last_update_date": {
                    "type": "string"
                },
                "product_id": {
                    "description": "Product_code of the product (fk)",
                    "type": "integer"
                },
                "purchase_price": {
                    "type": "number"
                },
                "sale_price": {
                    "type": "number"
                }
            }
        },
        "domain.ProductRecordGet": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "product_id": {
                    "description": "Product_code of the product (fk)",
                    "type": "integer"
                },
                "record_count": {
                    "description": "count of records",
                    "type": "integer"
                }
            }
        },
        "domain.ReportSellers": {
            "type": "object",
            "properties": {
                "locality_id": {
                    "type": "integer"
                },
                "locality_name": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "integer"
                },
                "sellers_count": {
                    "type": "integer"
                }
            }
        },
        "domain.Seller": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cid": {
                    "type": "integer"
                },
                "company_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "locality_id": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "handler.Employee": {
            "type": "object"
        },
        "handler.InboudOrderRequest": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "order_date": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "product_batch_id": {
                    "type": "integer"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "handler.Request": {
            "type": "object",
            "properties": {
                "card_number_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "handler.RequestBodyPurchaseCreate": {
            "type": "object",
            "properties": {
                "buyer_id": {
                    "type": "integer"
                },
                "order_date": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "order_status_id": {
                    "type": "integer"
                },
                "product_record_id": {
                    "type": "integer"
                },
                "tracking_code": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "handler.Warehouse": {
            "type": "object"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080/api/v1",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "API GO",
	Description:      "This API manage many products of any company.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
